{"version":3,"sources":["Event.js","EventList.js","Alert.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","showMore","this","setState","event","description","props","className","summary","location","eventDescription","onClick","showText","Component","EventList","events","map","id","Alert","getStyle","color","style","text","InfoAlert","ErrorAlert","WarningAlert","CitySearch","query","suggestions","showSuggestions","infoText","handleInputChanged","value","target","locations","filter","toUpperCase","indexOf","length","handleItemClicked","suggestion","updateEvents","type","placeholder","onChange","onFocus","display","NumberOfEvents","numberOfEvents","errorText","handleChange","updateNumberOfEvents","htmlFor","numberOfEventsShown","mockData","extractLocations","Set","getAccessToken","a","accessToken","localStorage","getItem","checkToken","tokenCheck","error","removeItem","searchParams","URLSearchParams","window","search","get","code","axios","results","authUrl","data","href","getToken","fetch","then","res","json","catch","result","getEvents","NProgress","start","startsWith","done","navigator","onLine","JSON","parse","token","removeQuery","url","setItem","stringify","history","pushState","pathname","newurl","protocol","host","encodeCode","encodeURIComponent","access_token","App","selectedLocation","warningText","locationEvents","slice","updateEventCount","num","getData","number","city","split","shift","mounted","filteredEvents","ResponsiveContainer","height","ScatterChart","margin","top","right","bottom","left","CartesianGrid","XAxis","dataKey","name","YAxis","allowDecimals","Tooltip","cursor","strokeDasharray","Scatter","fill","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","atatus","install","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","headers","response","contentType","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.0adb2f6d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n// import { mockData } from './mock-data';\r\nclass Event extends Component {\r\n\r\n    state = {\r\n        showMore: false\r\n    }\r\n\r\n    showMore() {\r\n        if (this.state.showMore === false) {\r\n            this.setState({ showMore: true })\r\n        } else {\r\n            this.setState({ showMore: false })\r\n        }\r\n    }\r\n\r\n    showText() {\r\n        if (this.state.showMore === false) {\r\n            return 'Show More'\r\n        } else {\r\n            return 'Show Less'\r\n        }\r\n    }\r\n\r\n    eventDescription(event) {\r\n        if (this.state.showMore === false) {\r\n            return ''\r\n        } else {\r\n            return event.description;\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const { event } = this.props;\r\n\r\n        return (\r\n            <>\r\n                <div className='event'>\r\n                    <h2>{event.summary}</h2>\r\n                    <h4>{event.location}</h4>\r\n                    <p className=\"description\">{this.eventDescription(event)}</p>\r\n                    <button className='details-btn' onClick={() => {this.showMore(event)}}>{this.showText()}</button>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Event;"," \r\nimport React, { Component } from 'react';\r\nimport Event from './Event';\r\n\r\nclass EventList extends Component {\r\n    render() {\r\n        const { events } = this.props;\r\n        return (\r\n            <ul className='EventList'>\r\n                {events.map((event) =>\r\n                    <li key={event.id}>\r\n                        <Event event={event} />\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EventList;","import React, { Component } from 'react';\r\n\r\nclass Alert extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = null;\r\n  }\r\n\r\n  getStyle = () => {\r\n    return {\r\n      color: this.color,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Alert\">\r\n        <p style={this.getStyle()}>{this.props.text}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass InfoAlert extends Alert {\r\n    constructor(props) {\r\n      super(props);\r\n      this.color = 'blue';\r\n    }\r\n}\r\n\r\nclass ErrorAlert extends Alert {\r\n    constructor(props) {\r\n        super(props);\r\n        this.color = 'red';\r\n    }\r\n}\r\n\r\nclass WarningAlert extends Alert {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = 'grey';\r\n  }\r\n}\r\n\r\nexport { InfoAlert, ErrorAlert, WarningAlert };","import React, { Component } from 'react';\r\nimport { InfoAlert } from './Alert';\r\n\r\nclass CitySearch extends Component {\r\n    state = {\r\n        query: '',\r\n        suggestions: [],\r\n        showSuggestions: false,\r\n        infoText: ''\r\n    }\r\n    \r\n    // updateList() {\r\n    //     const suggestions = this.props.locations.filter((location) => location);\r\n    //     this.setState({\r\n    //         suggestions,\r\n    //     });\r\n    // }\r\n\r\n    handleInputChanged = (event) => {\r\n        const value = event.target.value;\r\n        this.setState({ showSuggestions: true });\r\n        const suggestions = this.props.locations.filter((location) => {\r\n            return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n        });\r\n        if (suggestions.length === 0) {\r\n            this.setState({\r\n                query: value,\r\n                infoText: 'We can not find the city you are looking for. Please try another city',\r\n            });\r\n        } else {\r\n            this.setState({\r\n                query: value,\r\n                suggestions,\r\n                infoText: ''\r\n            });\r\n        }\r\n    };\r\n\r\n    handleItemClicked = (suggestion) => {\r\n        this.setState({\r\n          query: suggestion,\r\n          suggestions: [],\r\n          showSuggestions: false,\r\n          infoText: ''\r\n        });\r\n        this.props.updateEvents(suggestion);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='CitySearch' >\r\n                <InfoAlert text={this.state.infoText} />\r\n                <input\r\n                    type=\"text\"\r\n                    className='city'\r\n                    placeholder='Search for a City'\r\n                    value={this.state.query}\r\n                    onChange={this.handleInputChanged}\r\n                    onFocus={() => { this.setState({ showSuggestions: true }) }}\r\n                />\r\n                <ul className=\"suggestions\" style={this.state.showSuggestions ? {}: { display: 'none' }}>\r\n                    {this.state.suggestions.map((suggestion) => (\r\n                        <li\r\n                            key={suggestion}\r\n                            onClick={() => this.handleItemClicked(suggestion)}\r\n                        >{suggestion}</li>\r\n                    ))}\r\n                    <li \r\n                        key='All Locations'\r\n                        onClick={() => this.handleItemClicked('all')}>\r\n                        <b>See all cities</b>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CitySearch;","\r\nimport React, { Component } from 'react';\r\nimport { ErrorAlert } from './Alert';\r\n\r\nclass NumberOfEvents extends Component {\r\n\r\n  state = {\r\n    numberOfEvents: 32,\r\n    errorText: ''\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const value = event.target.value;\r\n    if ( value < 1 || value > 32 ) {\r\n      return this.setState({\r\n        numberOfEvents: '',\r\n        errorText: 'Please enter a number between 1 and 32'\r\n      });\r\n    } else {\r\n      this.setState({\r\n        numberOfEvents: value,\r\n        errorText: ''\r\n      });\r\n    }\r\n\r\n    this.props.updateNumberOfEvents(value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"numberOfEvents\">\r\n        <label htmlFor=\"fname\">Events per page:\r\n          <input \r\n            className='event-number-input'\r\n            type=\"text\"\r\n            id=\"number\" \r\n            value={this.props.numberOfEventsShown} \r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <ErrorAlert text={this.state.errorText} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NumberOfEvents;","\r\nconst mockData = [\r\n    {\r\n        \"kind\": \"calendar#event\",\r\n        \"etag\": \"\\\"3181161784712000\\\"\",\r\n        \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\r\n        \"status\": \"confirmed\",\r\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n        \"created\": \"2020-05-19T19:17:46.000Z\",\r\n        \"updated\": \"2020-05-27T12:01:32.356Z\",\r\n        \"summary\": \"Learn JavaScript\",\r\n        \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\r\n        \"location\": \"London, UK\",\r\n        \"creator\": {\r\n         \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n         \"self\": true\r\n        },\r\n        \"organizer\": {\r\n         \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n         \"self\": true\r\n        },\r\n        \"start\": {\r\n         \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n         \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"end\": {\r\n         \"dateTime\": \"2020-05-19T17:00:00+02:00\",\r\n         \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\r\n        \"originalStartTime\": {\r\n         \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n         \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\r\n        \"sequence\": 0,\r\n        \"reminders\": {\r\n         \"useDefault\": true\r\n        },\r\n        \"eventType\": \"default\"\r\n    },\r\n\r\n    {\r\n        \"kind\": \"calendar#event\",\r\n        \"etag\": \"\\\"3181159875584000\\\"\",\r\n        \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\r\n        \"status\": \"confirmed\",\r\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n        \"created\": \"2020-05-19T19:14:30.000Z\",\r\n        \"updated\": \"2020-05-27T11:45:37.792Z\",\r\n        \"summary\": \"React is Fun\",\r\n        \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\r\n        \"location\": \"Berlin, Germany\",\r\n        \"creator\": {\r\n         \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n         \"self\": true\r\n        },\r\n        \"organizer\": {\r\n         \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n         \"self\": true\r\n        },\r\n        \"start\": {\r\n         \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n         \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"end\": {\r\n         \"dateTime\": \"2020-05-20T15:00:00+02:00\",\r\n         \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\r\n        \"originalStartTime\": {\r\n         \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n         \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\r\n        \"sequence\": 0,\r\n        \"reminders\": {\r\n         \"useDefault\": true\r\n        },\r\n        \"eventType\": \"default\"\r\n    }\r\n];\r\n\r\nexport {mockData};","import { mockData } from './mock-data';\r\nimport axios from 'axios';\r\nimport NProgress from 'nprogress';\r\n\r\n/**\r\n *\r\n * @param {*} events:\r\n * The following function should be in the “api.js” file.\r\n * This function takes an events array, then uses map to create a new array with only locations.\r\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\r\n * The Set will remove all duplicates from the array.\r\n */\r\n export const extractLocations = (events) => {\r\n   var extractLocations = events.map((event) => event.location);\r\n   var locations = [...new Set(extractLocations)];\r\n    return locations;\r\n  };\r\n  \r\n  export const getAccessToken = async () => {\r\n    const accessToken = localStorage.getItem('access_token');\r\n    const tokenCheck = accessToken && (await checkToken(accessToken));\r\n    \r\n    if (!accessToken || tokenCheck.error) {\r\n      await localStorage.removeItem('access_token');\r\n      const searchParams = new URLSearchParams(window.location.search);\r\n      const code = await searchParams.get('code');\r\n      if (!code) {\r\n        const results = await axios.get('https://w69x4n8amc.execute-api.us-west-2.amazonaws.com/dev/api/get-auth-url');\r\n        const { authUrl } = results.data;\r\n        return (window.location.href = authUrl);\r\n      }\r\n      return code && getToken(code)\r\n    }\r\n    return accessToken;\r\n  };\r\n  \r\n  const checkToken = async (accessToken) => {\r\n    const result =  await fetch(\r\n      `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\r\n      )\r\n      .then((res) => res.json())\r\n      .catch((error) => error.json());\r\n      \r\n      return result;\r\n  };\r\n\r\n  export const getEvents = async () => {\r\n    NProgress.start();\r\n\r\n    if (window.location.href.startsWith(\"http://localhost\")) {\r\n      NProgress.done();\r\n      return mockData;\r\n    }\r\n\r\n    if (!navigator.onLine) {\r\n      const data = localStorage.getItem(\"lastEvents\");\r\n      NProgress.done();\r\n      return data ? JSON.parse(data).events : [];;\r\n    }\r\n    \r\n    const token = await getAccessToken();\r\n\r\n    if (token) {\r\n      removeQuery();\r\n      const url = `https://w69x4n8amc.execute-api.us-west-2.amazonaws.com/dev/api/get-events/${token}`\r\n      const result = await axios.get(url);\r\n      if (result.data) {\r\n        var locations = extractLocations(result.data.events);\r\n        localStorage.setItem('lastEvents', JSON.stringify(result.data));\r\n        localStorage.setItem('locations', JSON.stringify(locations));\r\n      }\r\n      NProgress.done();\r\n      return result.data.events;\r\n    }\r\n  };\r\n\r\n  const removeQuery = () => {\r\n    if (window.history.pushState && window.location.pathname) {\r\n      var newurl =\r\n        window.location.protocol +\r\n        '//' +\r\n        window.location.host +\r\n        window.location.pathname;\r\n      window.history.pushState('', '', newurl);\r\n    } else {\r\n      newurl = window.location.protocol + '//' + window.location.host;\r\n      window.history.pushState('', '', newurl);\r\n    }\r\n  };\r\n\r\n  const getToken = async (code) => {\r\n    const encodeCode = encodeURIComponent(code);\r\n    const { access_token } = await fetch(\r\n      `https://w69x4n8amc.execute-api.us-west-2.amazonaws.com/dev/api/token/${encodeCode}`\r\n    )\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .catch((error) => error);\r\n  \r\n    access_token && localStorage.setItem(\"access_token\", access_token);\r\n  \r\n    return access_token;\r\n  };","import './nprogress.css';\nimport React, { Component } from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\n// import mockData from './mock-data';\nimport { getEvents, extractLocations } from './api';\nimport { WarningAlert } from './Alert';\nimport {\n  ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer\n} from 'recharts';\n\nclass App extends Component {\n  \n  state = {\n    events: [],\n    locations: [],\n    numberOfEventsShown: 32,\n    selectedLocation: 'all',\n    warningText: ''\n  }\n  \n  componentDidMount() {\n    // const { numberOfEvents } = this.state;\n    this.mounted = true;\n    getEvents().then((events) => {\n      if (!navigator.onLine) {\n        this.setState({\n          warningText: 'You are offline. These events may not be up-to-date.'\n        });\n      } else {\n        this.setState({\n          warningText: ''\n        });\n      }\n\n      if (this.mounted) {\n        this.setState({ events, locations: extractLocations(events) });\n      }\n    });\n  }\n  \n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  updateEvents = (location) => {\n\n    if (!navigator.onLine) {\n      this.setState({\n        warningText: 'You are offline. These events may not be up-to-date.'\n      });\n    } else {\n      this.setState({\n        warningText: ''\n      });\n    }\n\n    getEvents().then((events) => {\n      const locationEvents = (location === 'all') ?\n        events :\n        events.filter((event) => event.location === location);\n      \n      const { numberOfEventsShown } = this.state;\n      this.setState({\n        events: locationEvents.slice(0, numberOfEventsShown)\n      });\n    });\n  }\n\n  updateEventCount = (num) => {\n    const { selectedLocation } = this.state;\n    this.setState({\n      numberOfEventsShown: num\n    });\n    this.updateEvents(selectedLocation);\n  }\n\n  getData = () => {\n    const {locations, events} = this.state;\n    const data = locations.map((location)=>{\n      const number = events.filter((event) => event.location === location).length\n      const city = location.split(', ').shift()\n      return {city, number};\n    })\n    return data;\n  };\n\n  render() {\n\n    const { selectedLocation, events, numberOfEventsShown } = this.state;\n    const filteredEvents = selectedLocation === 'all' ? events : events.filter(event => event.location === selectedLocation);\n\n    return (\n      <div className=\"App\">\n        <WarningAlert text={this.state.warningText} />\n        <CitySearch\n          locations={this.state.locations}\n          updateEvents={this.updateEvents}\n        />\n        <NumberOfEvents\n          numberOfEventsShown={numberOfEventsShown}\n          updateNumberOfEvents={this.updateEventCount}\n        />\n        <h4>Events in each city</h4>\n\n        <ResponsiveContainer height={400} >\n          <ScatterChart margin={{ top: 20, right: 20, bottom: 20, left: 20 }} >\n            <CartesianGrid />\n            <XAxis type=\"category\" dataKey=\"city\" name=\"city\" />\n            <YAxis type=\"number\" dataKey=\"number\" name=\"number of events\" allowDecimals={false} />\n            <Tooltip cursor={{ strokeDasharray: '3 3' }} />\n            <Scatter data={this.getData()} fill=\"#8884d8\" />\n          </ScatterChart>\n        </ResponsiveContainer>\n        <EventList events={filteredEvents} />\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.0/8 are considered localhost for IPv4.\r\n      window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://cra.link/PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then((registration) => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://cra.link/PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n      headers: { 'Service-Worker': 'script' },\r\n    })\r\n      .then((response) => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then((registration) => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log('No internet connection found. App is running in offline mode.');\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready\r\n        .then((registration) => {\r\n          registration.unregister();\r\n        })\r\n        .catch((error) => {\r\n          console.error(error.message);\r\n        });\r\n    }\r\n  }","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nimport * as atatus from 'atatus-spa';\natatus.config('250870bd37c7486cb0e13380d09e5572').install();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}