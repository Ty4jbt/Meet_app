{"version":3,"sources":["Event.js","EventList.js","CitySearch.js","NumberofEvents.js","App.js","reportWebVitals.js","index.js"],"names":["Event","state","showMore","this","setState","event","description","props","className","summary","eventDescription","onClick","showText","Component","EventList","events","map","id","CitySearch","query","suggestions","handleInputChanged","value","target","locations","filter","location","toUpperCase","indexOf","handleItemClicked","suggestion","type","onChange","NumberofEvents","eventsToShow","handleChange","for","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","serviceWorkerRegistration"],"mappings":"mOAgDeA,E,4MA5CXC,MAAQ,CACJC,UAAU,G,8CAGd,YACgC,IAAxBC,KAAKF,MAAMC,SACXC,KAAKC,SAAS,CAAEF,UAAU,IAE1BC,KAAKC,SAAS,CAAEF,UAAU,M,sBAIlC,WACI,OAA4B,IAAxBC,KAAKF,MAAMC,SACJ,YAEA,c,8BAIf,SAAiBG,GACb,OAA4B,IAAxBF,KAAKF,MAAMC,SACJ,GAEAG,EAAMC,c,oBAIrB,WAAU,IAAD,OAEGD,EAAUF,KAAKI,MAAfF,MAER,OACI,mCACI,sBAAKG,UAAU,QAAf,UACI,6BAAKH,EAAMI,UACX,mBAAGD,UAAU,cAAb,SAA4BL,KAAKO,iBAAiBL,KAClD,wBAAQG,UAAU,cAAcG,QAAS,WAAO,EAAKT,SAASG,IAA9D,SAAwEF,KAAKS,sB,GAvC7EC,aCiBLC,E,4JAdX,WACI,IAAQC,EAAWZ,KAAKI,MAAhBQ,OACR,OACI,oBAAIP,UAAU,YAAd,SACKO,EAAOC,KAAI,SAAAX,GAAK,OACb,6BACI,cAAC,EAAD,CAAOA,MAAOU,KADTV,EAAMY,a,GANXJ,aC8CTK,E,4MA/CXjB,MAAQ,CACJkB,MAAO,GACPC,YAAa,I,EAGjBC,mBAAqB,SAAChB,GAClB,IAAMiB,EAAQjB,EAAMkB,OAAOD,MACrBF,EAAc,EAAKb,MAAMiB,UAAUC,QAAO,SAACC,GAC7C,OAAOA,EAASC,cAAcC,QAAQN,EAAMK,gBAAkB,KAElE,EAAKvB,SAAS,CACVe,MAAOG,EACPF,iB,EAIRS,kBAAoB,SAACC,GACjB,EAAK1B,SAAS,CACZe,MAAOW,K,4CAIb,WAAU,IAAD,OACL,OACI,sBAAKtB,UAAU,aAAf,UACI,uBACIuB,KAAK,OACLvB,UAAU,OACVc,MAAOnB,KAAKF,MAAMkB,MAClBa,SAAU7B,KAAKkB,qBAEnB,qBAAIb,UAAU,cAAd,UACKL,KAAKF,MAAMmB,YAAYJ,KAAI,SAACc,GAAD,OACxB,oBAEInB,QAAS,kBAAM,EAAKkB,kBAAkBC,IAF1C,SAGEA,GAFOA,MAIb,6BACI,gDADI,iB,GAvCHjB,aCmCVoB,E,4MAhCbhC,MAAQ,CACNiC,aAAc,I,EAGhBC,aAAe,SAAC9B,GACd,IAAMiB,EAAQjB,EAAMkB,OAAOD,MACd,IAAVA,EACD,EAAKlB,SAAS,CACZ8B,aAAcZ,IAGhB,EAAKlB,SAAS,CACZ8B,aAAc,M,4CAKpB,WACE,OACE,qBAAK1B,UAAU,iBAAf,SACE,wBAAO4B,IAAI,QAAX,6BACE,uBACAL,KAAK,OACLd,GAAG,SACHK,MAAOnB,KAAKF,MAAMiC,aAClBF,SAAU7B,KAAKgC,wB,GA3BItB,aCadwB,MAVf,WACE,OACE,sBAAK7B,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,Q,OCCS8B,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BC,eAKAd,K","file":"static/js/main.a7088163.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Event extends Component {\r\n\r\n    state = {\r\n        showMore: false\r\n    }\r\n\r\n    showMore() {\r\n        if (this.state.showMore === false) {\r\n            this.setState({ showMore: true })\r\n        } else {\r\n            this.setState({ showMore: false })\r\n        }\r\n    }\r\n\r\n    showText() {\r\n        if (this.state.showMore === false) {\r\n            return 'Show More'\r\n        } else {\r\n            return 'Show Less'\r\n        }\r\n    }\r\n\r\n    eventDescription(event) {\r\n        if (this.state.showMore === false) {\r\n            return ''\r\n        } else {\r\n            return event.description;\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const { event } = this.props;\r\n\r\n        return (\r\n            <>\r\n                <div className='event'>\r\n                    <h2>{event.summary}</h2>\r\n                    <p className=\"description\">{this.eventDescription(event)}</p>\r\n                    <button className='details-btn' onClick={() => {this.showMore(event)}}>{this.showText()}</button>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Event;"," \r\nimport React, { Component } from 'react';\r\nimport Event from './Event';\r\n\r\nclass EventList extends Component {\r\n    render() {\r\n        const { events } = this.props;\r\n        return (\r\n            <ul className='EventList'>\r\n                {events.map(event =>\r\n                    <li key={event.id}>\r\n                        <Event event={events} />\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EventList;","import React, { Component } from 'react';\r\n\r\nclass CitySearch extends Component {\r\n    state = {\r\n        query: '',\r\n        suggestions: []\r\n    }\r\n\r\n    handleInputChanged = (event) => {\r\n        const value = event.target.value;\r\n        const suggestions = this.props.locations.filter((location) => {\r\n            return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n        });\r\n        this.setState({\r\n            query: value,\r\n            suggestions,\r\n        });\r\n    }\r\n\r\n    handleItemClicked = (suggestion) => {\r\n        this.setState({\r\n          query: suggestion\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='CitySearch' >\r\n                <input\r\n                    type=\"text\"\r\n                    className='city'\r\n                    value={this.state.query}\r\n                    onChange={this.handleInputChanged}\r\n                />\r\n                <ul className=\"suggestions\">\r\n                    {this.state.suggestions.map((suggestion) => (\r\n                        <li\r\n                            key={suggestion}\r\n                            onClick={() => this.handleItemClicked(suggestion)}\r\n                        >{suggestion}</li>\r\n                    ))}\r\n                    <li key='all'>\r\n                        <b>See all cities</b>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CitySearch;","\r\nimport React, { Component } from 'react';\r\n\r\nclass NumberofEvents extends Component {\r\n\r\n  state = {\r\n    eventsToShow: 32\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const value = event.target.value;\r\n    if(value !== 0) {\r\n      this.setState({\r\n        eventsToShow: value \r\n      });\r\n    } else {\r\n      this.setState({\r\n        eventsToShow: 32\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"numberOfEvents\">\r\n        <label for=\"fname\">Events per page:\r\n          <input \r\n          type=\"text\" \r\n          id=\"number\" \r\n          value={this.state.eventsToShow} \r\n          onChange={this.handleChange} />\r\n        </label>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NumberofEvents;","import React from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberofEvents from './NumberofEvents';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CitySearch />\n      <EventList />\n      <NumberofEvents />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}